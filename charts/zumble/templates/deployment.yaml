{{-  $basicAuthCredentials := printf "%s:%s" .Values.api.username .Values.api.password -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "zumble.fullname" . }}
  labels:
    {{- include "zumble.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "zumble.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "zumble.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: {{ .Chart.Name }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: RUST_LOG
          value: {{ .Values.logLevel }}
        - name: CLIENT_CAPACITY
          value: "{{ .Values.config.clientCapacity }}"
        envFrom:
        - secretRef:
            name: {{ include "zumble.fullname" . }}
        args:
        - --http-password
        - "$(HTTP_API_PASSWORD)"
        - --http-user
        - "{{ .Values.api.username }}"
        - --http-listen
        - "0.0.0.0:{{ .Values.service.http.port }}"
        - --listen
        - "0.0.0.0:{{ .Values.service.mumble.port }}"
        ports:
        - name: http
          containerPort: {{ .Values.service.http.port }}
          protocol: TCP
        - name: mumble-udp
          containerPort: {{ .Values.service.mumble.port }}
          protocol: UDP
        - name: mumble-tcp
          containerPort: {{ .Values.service.mumble.port }}
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /metrics
            port: http
            httpHeaders:
            - name: Authorization
              value: "Basic {{ $basicAuthCredentials | b64enc }}"
        readinessProbe:
          httpGet:
            path: /metrics
            port: http
            httpHeaders:
            - name: Authorization
              value: "Basic {{ $basicAuthCredentials | b64enc }}"
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
